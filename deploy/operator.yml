---
kind: Namespace
apiVersion: v1
metadata:
  name: bruce
  labels:
    name: bruce
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bruce-operator
  namespace: bruce
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: bruce-operator
  labels:
    k8s-app: bruce-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: bruce-operator
  namespace: bruce
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: bruce-operator
  namespace: bruce
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: bruce-operator
subjects:
- kind: ServiceAccount
  name: bruce-operator
  namespace: bruce
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  name: buildpacks-volume
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bruce-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: bruce-operator
  template:
    metadata:
      labels:
        name: bruce-operator
    spec:
      serviceAccountName: bruce-operator
      containers:
        - name: bruce-operator
          image: kennethreitz/bruce-operator:latest
          imagePullPolicy: Always
          volumeMounts:
          - mountPath: /opt/buildpacks
            name: buildpacks-volume
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: bruce-operator
spec:
  clusterIP: None
status:
  loadBalancer: {}
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: buildpacks.bruce.kennethreitz.org
spec:
  group: bruce.kennethreitz.org
  names:
    kind: Buildpack
    listKind: buildpackList
    plural: buildpacks
    singular: buildpack
    shortNames: [bp,]
  scope: Namespaced
  version: v1alpha1
---
apiVersion: v1
items:
- apiVersion: bruce.kennethreitz.org/v1alpha1
  kind: Buildpack
  metadata:
    name: "ruby"
    buildkit: "heroku/ruby"
- apiVersion: bruce.kennethreitz.org/v1alpha1
  kind: Buildpack
  metadata:
    name: "nodejs"
    buildkit: "heroku/nodejs"
- apiVersion: bruce.kennethreitz.org/v1alpha1
  kind: Buildpack
  metadata:
    name: "clojure"
    buildkit: "heroku/clojure"
- apiVersion: bruce.kennethreitz.org/v1alpha1
  kind: Buildpack
  metadata:
    name: "python"
    buildkit: "heroku/python"
- apiVersion: bruce.kennethreitz.org/v1alpha1
  kind: Buildpack
  metadata:
    name: "java"
    buildkit: "heroku/java"
- apiVersion: bruce.kennethreitz.org/v1alpha1
  kind: Buildpack
  metadata:
    name: "gradle"
    buildkit: "heroku/gradle"
- apiVersion: bruce.kennethreitz.org/v1alpha1
  kind: Buildpack
  metadata:
    name: "scala"
    buildkit: "heroku/scala"
- apiVersion: bruce.kennethreitz.org/v1alpha1
  kind: Buildpack
  metadata:
    name: "php"
    buildkit: "heroku/php"
- apiVersion: bruce.kennethreitz.org/v1alpha1
  kind: Buildpack
  metadata:
    name: "go"
    buildkit: "heroku/go"
- apiVersion: bruce.kennethreitz.org/v1alpha1
  kind: Buildpack
  metadata:
    name: "elixir"
    buildkit: "hashnuke/elixir"
- apiVersion: bruce.kennethreitz.org/v1alpha1
  kind: Buildpack
  metadata:
    name: "static"
    repo: "https://github.com/dokku/buildpack-nginx"
- apiVersion: bruce.kennethreitz.org/v1alpha1
  kind: Buildpack
  metadata:
    name: "multi"
    repo: "https://github.com/heroku/heroku-buildpack-multi"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: apps.bruce.kennethreitz.org
spec:
  group: bruce.kennethreitz.org
  names:
    kind: App
    listKind: appList
    plural: apps
    singular: app
  scope: Namespaced
  version: v1alpha1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  name: bruce-registry-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\me\OneDrive\system\bin\kompose.exe convert -f .\kubernetes-compose.yml
    kompose.version: 1.1.0 (36652f6)
  creationTimestamp: null
  name: registry
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
    spec:
      containers:
      - env:
        - name: REGISTRY_HTTP_ADDR
          value: 0.0.0.0:80
        image: registry:2
        name: registry
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/registry
          name: bruce-registry-data
      restartPolicy: Always
      volumes:
      - name: bruce-registry-data
        persistentVolumeClaim:
          claimName: bruce-registry-data
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  name: registry
spec:
  clusterIP: None
  ports:
  - name: registry-http
    port: 80
    # nodePort: 80
    targetPort: 0
status:
  loadBalancer: {}
